services:
  postgresql:
    image: docker.io/library/postgres:16-alpine
    container_name: authentik-postgresql
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -d $${POSTGRES_DB} -U $${POSTGRES_USER}"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 5s
    volumes:
      - ${VOLUME_PATH}/authentik/postgresql:/var/lib/postgresql/data
    labels:
      docker-volume-backup.stop-during-backup: true
    env_file:
      - ../.authentik.env
    networks:
      - authentik

  redis:
    image: docker.io/library/redis:alpine
    container_name: authentik-redis
    command: --save 60 1 --loglevel warning
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping | grep PONG"]
      start_period: 20s
      interval: 30s
      retries: 5
      timeout: 3s
    volumes:
      - ${VOLUME_PATH}/authentik/redis:/data
    labels:
      docker-volume-backup.stop-during-backup: true
    networks:
      - authentik

  authentik-server:
    image: ghcr.io/goauthentik/server:2024.6.3
    container_name: authentik-server
    restart: unless-stopped
    command: server
    env_file:
      - ../.authentik.env
    volumes:
      - ${VOLUME_PATH}/authentik/media:/media
      - ${VOLUME_PATH}/authentik/custom-templates:/templates
    depends_on:
      - postgresql
      - redis
    networks:
      - authentik
      - proxy

  authentik-worker:
    image: ghcr.io/goauthentik/server:2024.6.3
    container_name: authentik-worker
    restart: unless-stopped
    command: worker
    env_file:
      - ../.authentik.env
    user: root
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${VOLUME_PATH}/authentik/media:/media
      - ${VOLUME_PATH}/authentik/certs/live:/certs
      - ${VOLUME_PATH}/authentik/certs/archive:/archive
      - ${VOLUME_PATH}/authentik/custom-templates:/templates
    depends_on:
      - postgresql
      - redis
    networks:
      - authentik
      - proxy

networks:
  authentik:
    ipam:
      driver: default
      config:
        # Necessary for setting homeassistant trusted_proxies
        - subnet: "172.20.0.0/16"
