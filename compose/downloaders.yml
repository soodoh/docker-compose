x-logging: &default-logging
  driver: json-file
  options:
    max-size: 10m
    max-file: 3

services:
  jellyseerr:
    image: fallenbagel/jellyseerr:latest
    container_name: jellyseerr
    restart: unless-stopped
    logging: *default-logging
    environment:
      TZ: $TZ
    ports:
      - 5055:5055
    volumes:
      - ${VOLUME_PATH}/jellyseerr:/app/config
    labels:
      docker-volume-backup.stop-during-backup: true
    networks:
      - proxy
      - arr_network

  ofelia:
    image: mcuadros/ofelia:latest
    container_name: ofelia
    restart: unless-stopped
    logging: *default-logging
    depends_on:
      gluetun:
        condition: service_healthy
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - arr_network

  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    hostname: gluetun
    restart: always
    logging: *default-logging
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - ${VOLUME_PATH}/gluetun/config:/gluetun
      - ${VOLUME_PATH}/gluetun/info:/tmp/gluetun
      - ${SCRIPTS_PATH}/mam_seedbox_update_ip.sh:/scripts/ip.sh:ro
      - ${SCRIPTS_PATH}/update_port.sh:/scripts/port.sh:ro
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.update-ip.schedule: "@every 5m"
      ofelia.job-exec.update-ip.command: "sh /scripts/ip.sh"
      ofelia.job-exec.update-port.schedule: "@every 5m"
      ofelia.job-exec.update-port.command: "sh /scripts/port.sh"
    environment:
      TZ: $TZ
      VPN_SERVICE_PROVIDER: $VPN_SERVICE_PROVIDER
      VPN_TYPE: $VPN_TYPE
      OPENVPN_USER: $OPENVPN_USER
      OPENVPN_PASSWORD: $OPENVPN_PASSWORD
      VPN_PORT_FORWARDING: $VPN_PORT_FORWARDING
      VPN_PORT_FORWARDING_PROVIDER: $VPN_SERVICE_PROVIDER
      MAM_ID: $MAM_ID
      MAM_URL: $MAM_URL
    networks:
      - proxy
      - arr_network

  tachidesk:
    image: ghcr.io/suwayomi/tachidesk:preview
    container_name: tachidesk
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    labels:
      docker-volume-backup.stop-during-backup: true
    environment:
      TZ: $TZ
      DOWNLOAD_AS_CBZ: true
      WEB_UI_ENABLED: true
      WEB_UI_FLAVOR: WebUI
      WEB_UI_CHANNEL: preview
      WEB_UI_UPDATE_INTERVAL: 12
      AUTO_DOWNLOAD_CHAPTERS: true
      AUTO_DOWNLOAD_EXCLUDE_UNREAD: false
      AUTO_DOWNLOAD_AHEAD_LIMIT: 20
      UPDATE_EXCLUDE_UNREAD: false
      UPDATE_EXCLUDE_STARTED: false
      UPDATE_EXCLUDE_COMPLETED: true
      UPDATE_INTERVAL: 12
      UPDATE_MANGA_INFO: true
      FLARESOLVERR_ENABLED: true
      FLARESOLVERR_URL: http://gluetun:8191
    volumes:
      - ${VOLUME_PATH}/tachidesk:/home/suwayomi/.local/share/Tachidesk

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:latest
    container_name: flaresolverr
    restart: always
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    environment:
      TZ: $TZ
      network_mode: service:gluetun

  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    logging: *default-logging
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
    volumes:
      - ${VOLUME_PATH}/prowlarr:/config

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr:latest
    container_name: recyclarr
    user: 1000:1000
    networks:
      - arr_network
    volumes:
      - ${VOLUME_PATH}/recyclarr:/config
    environment:
      TZ: $TZ
      SONARR_URL: $SONARR_URL
      SONARR_API_KEY: $SONARR_API_KEY
      RADARR_URL: $RADARR_URL
      RADARR_API_KEY: $RADARR_API_KEY
      RADARR_4K_URL: $RADARR_4K_URL
      RADARR_4K_API_KEY: $RADARR_4K_API_KEY

  sonarr:
    image: linuxserver/sonarr:latest
    container_name: sonarr
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
      SONARR__AUTH__APIKEY: $SONARR_API_KEY
      SONARR__SERVER__PORT: 8989
    volumes:
      - ${VOLUME_PATH}/sonarr:/config
      - ${MEDIA_PATH}:/data

  # sonarr-4k:
  #   image: linuxserver/sonarr:latest
  #   container_name: sonarr-4k
  #   restart: unless-stopped
  #   logging: *default-logging
  #   network_mode: service:gluetun
  #   depends_on:
  #     gluetun:
  #       condition: service_healthy
  #   environment:
  #     TZ: $TZ
  #     PUID: 1000
  #     PGID: 1000
  #     SONARR__AUTH__APIKEY: $SONARR_4k_API_KEY
  #     SONARR__SERVER__PORT: 8990
  #   volumes:
  #     - ${VOLUME_PATH}/sonarr-4k:/config
  #     - ${MEDIA_PATH}:/data

  radarr:
    image: linuxserver/radarr:latest
    container_name: radarr
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
      RADARR__AUTH__APIKEY: $RADARR_API_KEY
      RADARR__SERVER__PORT: 7878
    volumes:
      - ${VOLUME_PATH}/radarr:/config
      - ${MEDIA_PATH}:/data

  radarr-4k:
    image: linuxserver/radarr:latest
    container_name: radarr-4k
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
      RADARR__AUTH__APIKEY: $RADARR_4K_API_KEY
      RADARR__SERVER__PORT: 7879
    volumes:
      - ${VOLUME_PATH}/radarr-4k:/config
      - ${MEDIA_PATH}:/data

  lidarr:
    image: linuxserver/lidarr:latest
    container_name: lidarr
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 999
      PGID: 999
      LIDARR__AUTH__APIKEY: $LIDARR_API_KEY
      LIDARR__SERVER__PORT: 8686
    volumes:
      - ${VOLUME_PATH}/lidarr:/config
      - ${MEDIA_PATH}:/data

  readarr:
    image: linuxserver/readarr:develop
    container_name: readarr
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
      READARR__AUTH__APIKEY: $READARR_API_KEY
      READARR__SERVER__PORT: 8787
    volumes:
      - ${VOLUME_PATH}/readarr:/config
      - ${MEDIA_PATH}:/data

  speakarr:
    image: linuxserver/readarr:develop
    container_name: speakarr
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
      READARR__AUTH__APIKEY: $SPEAKARR_API_KEY
      READARR__SERVER__PORT: 8788
    volumes:
      - ${VOLUME_PATH}/speakarr:/config
      - ${MEDIA_PATH}:/data

  unpackerr:
    image: golift/unpackerr:latest
    container_name: unpackerr
    restart: unless-stopped
    logging: *default-logging
    environment:
      TZ: $TZ
      # UN_SONARR_0_URL: http://gluetun:8989
      # UN_SONARR_0_API_KEY: $SONARR_API_KEY
      # UN_SONARR_0_PATHS_0: /data/downloads/complete
      # UN_RADARR_0_URL: http://gluetun:7878
      # UN_RADARR_0_API_KEY: $RADARR_API_KEY
      # UN_RADARR_0_PATHS_0: /data/downloads/complete
      # UN_RADARR_1_URL: http://gluetun:7879
      # UN_RADARR_1_API_KEY: $RADARR_4K_API_KEY
      # UN_RADARR_1_PATHS_0: /data/downloads/complete
      ## Watch Folders
      UN_FOLDER_0_PATH: /data/downloads/complete
      UN_FOLDER_0_DISABLE_RECURSION: false
      UN_FOLDER_0_DELETE_FILES: false
      UN_FOLDER_0_DELETE_ORIGINAL: false
      UN_FOLDER_0_DISABLE_LOG: false
      UN_FOLDER_0_MOVE_BACK: false
      UN_FOLDER_0_EXTRACT_ISOS: false
    volumes:
      - ${MEDIA_PATH}/downloads:/data/downloads
    networks:
      - arr_network

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      PUID: 1000
      PGID: 1000
      TZ: $TZ
    volumes:
      - ${VOLUME_PATH}/qbittorrent/config:/config
      - ${VOLUME_PATH}/qbittorrent/vuetorrent:/vuetorrent
      - ${MEDIA_PATH}/downloads:/data/downloads

networks:
  arr_network:
    ipam:
      driver: default
      config:
        - subnet: "172.21.0.0/16"
