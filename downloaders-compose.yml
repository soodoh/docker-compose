x-logging: &default-logging
  driver: json-file
  options:
    max-size: 10m
    max-file: 3

services:
  jellyseerr:
    image: fallenbagel/jellyseerr:2.7.3
    container_name: jellyseerr
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    environment:
      TZ: $TZ
    volumes:
      - jellyseer-data:/app/config
    labels:
      docker-volume-backup.stop-during-backup: true

  gluetun:
    image: qmcgaw/gluetun:v3.40.0
    container_name: gluetun
    hostname: gluetun
    restart: always
    logging: *default-logging
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - gluetun-data:/gluetun
      - ./scripts/gluetun:/scripts:ro
    environment:
      TZ: $TZ
      # Needed to maintain consistent ASN for MAM session
      SERVER_COUNTRIES: United States
      VPN_SERVICE_PROVIDER: $VPN_SERVICE_PROVIDER
      VPN_TYPE: $VPN_TYPE
      OPENVPN_USER: $OPENVPN_USER
      OPENVPN_PASSWORD: $OPENVPN_PASSWORD
      VPN_PORT_FORWARDING: $VPN_PORT_FORWARDING
      VPN_PORT_FORWARDING_PROVIDER: $VPN_SERVICE_PROVIDER
      VPN_PORT_FORWARDING_UP_COMMAND: /bin/sh /scripts/gluetun_up.sh
    networks:
      - proxy
      - arr_network

  tachidesk:
    # Same image on Dockerhub is outdated
    image: ghcr.io/suwayomi/tachidesk:v2.1.1940
    container_name: tachidesk
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    labels:
      docker-volume-backup.stop-during-backup: true
    environment:
      TZ: $TZ
      DOWNLOAD_AS_CBZ: true
      WEB_UI_ENABLED: true
      WEB_UI_FLAVOR: WebUI
      WEB_UI_CHANNEL: preview
      WEB_UI_UPDATE_INTERVAL: 12
      AUTO_DOWNLOAD_CHAPTERS: true
      AUTO_DOWNLOAD_EXCLUDE_UNREAD: false
      AUTO_DOWNLOAD_AHEAD_LIMIT: 20
      UPDATE_EXCLUDE_UNREAD: false
      UPDATE_EXCLUDE_STARTED: false
      UPDATE_EXCLUDE_COMPLETED: true
      UPDATE_INTERVAL: 12
      UPDATE_MANGA_INFO: true
      FLARESOLVERR_ENABLED: true
      FLARESOLVERR_URL: http://gluetun:8191
      BIND_PORT: 4567
    volumes:
      - tachidesk-data:/home/suwayomi/.local/share/Tachidesk
      - ${MEDIA_PATH}/tachidesk:/home/suwayomi/.local/share/Tachidesk/downloads

  caro-tachidesk:
    # Same image on Dockerhub is outdated
    image: ghcr.io/suwayomi/tachidesk:v2.1.1940
    container_name: caro-tachidesk
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    labels:
      docker-volume-backup.stop-during-backup: true
    environment:
      TZ: $TZ
      DOWNLOAD_AS_CBZ: true
      WEB_UI_ENABLED: true
      WEB_UI_FLAVOR: WebUI
      WEB_UI_CHANNEL: preview
      WEB_UI_UPDATE_INTERVAL: 12
      AUTO_DOWNLOAD_CHAPTERS: true
      AUTO_DOWNLOAD_EXCLUDE_UNREAD: false
      AUTO_DOWNLOAD_AHEAD_LIMIT: 20
      UPDATE_EXCLUDE_UNREAD: false
      UPDATE_EXCLUDE_STARTED: false
      UPDATE_EXCLUDE_COMPLETED: true
      UPDATE_INTERVAL: 12
      UPDATE_MANGA_INFO: true
      FLARESOLVERR_ENABLED: true
      FLARESOLVERR_URL: http://gluetun:8191
      BIND_PORT: 4568
    volumes:
      - caro-tachidesk-data:/home/suwayomi/.local/share/Tachidesk

  flaresolverr:
    image: ghcr.io/flaresolverr/flaresolverr:v3.4.1
    container_name: flaresolverr
    restart: always
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    security_opt:
      - no-new-privileges:true
    environment:
      TZ: $TZ

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:2.1.2-develop
    container_name: prowlarr
    restart: unless-stopped
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    logging: *default-logging
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
    volumes:
      - prowlarr-data:/config
    labels:
      docker-volume-backup.stop-during-backup: true

  recyclarr:
    image: ghcr.io/recyclarr/recyclarr:7.4.1
    container_name: recyclarr
    user: 1000:1000
    networks:
      - arr_network
    volumes:
      - recyclarr-data:/config
    environment:
      TZ: $TZ
      SONARR_URL: $SONARR_URL
      SONARR_API_KEY: $SONARR_API_KEY
      RADARR_URL: $RADARR_URL
      RADARR_API_KEY: $RADARR_API_KEY
      RADARR_4K_URL: $RADARR_4K_URL
      RADARR_4K_API_KEY: $RADARR_4K_API_KEY
    labels:
      docker-volume-backup.stop-during-backup: true

  sonarr:
    image: ghcr.io/linuxserver/sonarr:4.0.15
    container_name: sonarr
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
      SONARR__AUTH__APIKEY: $SONARR_API_KEY
      SONARR__SERVER__PORT: 8989
    volumes:
      - sonarr-data:/config
      - ${MEDIA_PATH}:/data
    labels:
      docker-volume-backup.stop-during-backup: true

  radarr:
    image: ghcr.io/linuxserver/radarr:5.27.5
    container_name: radarr
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
      RADARR__AUTH__APIKEY: $RADARR_API_KEY
      RADARR__SERVER__PORT: 7878
    volumes:
      - radarr-data:/config
      - ${MEDIA_PATH}:/data
    labels:
      docker-volume-backup.stop-during-backup: true

  radarr-4k:
    image: ghcr.io/linuxserver/radarr:5.27.5
    container_name: radarr-4k
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
      RADARR__AUTH__APIKEY: $RADARR_4K_API_KEY
      RADARR__SERVER__PORT: 7879
    volumes:
      - radarr-4k-data:/config
      - ${MEDIA_PATH}:/data
    labels:
      docker-volume-backup.stop-during-backup: true

  # Readarr replacement
  bookshelf:
    image: ghcr.io/pennydreadful/bookshelf:hardcover-v0.4.19
    container_name: bookshelf
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
      READARR__AUTH__APIKEY: $READARR_API_KEY
      READARR__SERVER__PORT: 8787
    volumes:
      - bookshelf-data:/config
      - ${MEDIA_PATH}:/data
      - type: volume
        source: calibre-data
        target: /books
        volume:
          subpath: books
    labels:
      docker-volume-backup.stop-during-backup: true

  unpackerr:
    image: golift/unpackerr:0.14.5
    container_name: unpackerr
    restart: unless-stopped
    logging: *default-logging
    environment:
      TZ: $TZ
      UN_SONARR_0_URL: $SONARR_URL
      UN_SONARR_0_API_KEY: $SONARR_API_KEY
      UN_SONARR_0_PATHS_0: /data/downloads/complete
      UN_RADARR_0_URL: $RADARR_URL
      UN_RADARR_0_API_KEY: $RADARR_API_KEY
      UN_RADARR_0_PATHS_0: /data/downloads/complete
      UN_RADARR_1_URL: $RADARR_4K_URL
      UN_RADARR_1_API_KEY: $RADARR_4K_API_KEY
      UN_RADARR_1_PATHS_0: /data/downloads/complete
      UN_READARR_0_URL: $READARR_URL
      UN_READARR_0_API_KEY: $READARR_API_KEY
      UN_READARR_0_PATHS_0: /data/downloads/complete
      UN_READARR_1_URL: $SPEAKARR_URL
      UN_READARR_1_API_KEY: $SPEAKARR_API_KEY
      UN_READARR_1_PATHS_0: /data/downloads/complete
    volumes:
      - ${MEDIA_PATH}/downloads:/data/downloads
    networks:
      - arr_network

  qbittorrent:
    image: ghcr.io/linuxserver/qbittorrent:5.1.2
    container_name: qbittorrent
    restart: unless-stopped
    logging: *default-logging
    network_mode: service:gluetun
    depends_on:
      gluetun:
        condition: service_healthy
    environment:
      PUID: 1000
      PGID: 1000
      TZ: $TZ
    volumes:
      - qbittorrent-data:/config
      - ${VUETORRENT_PATH}:/vuetorrent
      - ${MEDIA_PATH}/downloads:/data/downloads
    labels:
      docker-volume-backup.stop-during-backup: true

volumes:
  bookshelf-data:
  caro-tachidesk-data:
  gluetun-data:
  jellyseer-data:
  prowlarr-data:
  qbittorrent-data:
  radarr-4k-data:
  radarr-data:
  recyclarr-data:
  sonarr-data:
  tachidesk-data:


networks:
  arr_network:
    ipam:
      driver: default
      config:
        - subnet: "172.21.0.0/16"
