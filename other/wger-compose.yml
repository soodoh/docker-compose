# services:
#   wger-web:
#     image: wger/server:latest
#     container_name: wger-web
#     ports:
#       - 8001:8000
#     depends_on:
#       wger-db:
#         condition: service_healthy
#       wger-cache:
#         condition: service_healthy
#     env_file:
#       - ../.wger.env
#     environment:
#       TZ: $TZ
#       TIME_ZONE: $TZ
#     volumes:
#       - wger-static:/home/wger/static
#       - wger-media:/home/wger/media
#     restart: unless-stopped
#     healthcheck:
#       test: wget --no-verbose --tries=1 --spider http://localhost:8000
#       interval: 10s
#       timeout: 5s
#       retries: 5
#     networks:
#       - proxy
#       - wger
#
#   wger-db:
#     image: postgres:15-alpine
#     container_name: wger-postgres
#     environment:
#       - POSTGRES_USER=wger
#       - POSTGRES_PASSWORD=wger
#       - POSTGRES_DB=wger
#     volumes:
#       - wger-postgres:/var/lib/postgresql/data/
#     expose:
#       - 5432
#     healthcheck:
#       test: pg_isready -U wger
#       interval: 10s
#       timeout: 5s
#       retries: 5
#       start_period: 30s
#     restart: unless-stopped
#     networks:
#       - wger
#
#   wger-cache:
#     image: redis
#     container_name: wger-redis
#     expose:
#       - 6379
#     volumes:
#       - wger-redis:/data
#     healthcheck:
#       test: redis-cli ping
#       interval: 10s
#       timeout: 5s
#       retries: 5
#       start_period: 30s
#     restart: unless-stopped
#     networks:
#       - wger
#
#   celery_worker:
#     image: wger/server:latest
#     container_name: wger-celery-worker
#     command: /start-worker
#     env_file:
#       - ../.wger.env
#     volumes:
#       - wger-media:/home/wger/media
#     depends_on:
#       wger-web:
#         condition: service_healthy
#     healthcheck:
#       test: celery -A wger inspect ping
#       interval: 10s
#       timeout: 5s
#       retries: 5
#       start_period: 30s
#     networks:
#       - wger
#
#   celery_beat:
#     image: wger/server:latest
#     container_name: wger-celery-beat
#     command: /start-beat
#     volumes:
#       - celery-beat:/home/wger/beat/
#     env_file:
#       - ../.wger.env
#     depends_on:
#       celery_worker:
#         condition: service_healthy
#     networks:
#       - wger
#
# volumes:
#   wger-static:
#   wger-media:
#   celery-beat:
#   wger-postgres:
#   wger-redis:
#
# networks:
#   wger:
#   proxy:
#     external: true
#
