services:
  prowlarr:
    image: linuxserver/prowlarr:latest
    container_name: prowlarr
    restart: unless-stopped
    environment:
      TZ: $TZ
      PUID: 1000
      PGID: 1000
    volumes:
      - prowlarr:/config
    networks:
      - proxy
      - arr_network

  unpackerr:
    image: golift/unpackerr:latest
    container_name: unpackerr
    restart: unless-stopped
    environment:
      TZ: $TZ
      UN_SONARR_0_URL: http://sonarr:8989
      UN_SONARR_0_API_KEY: $SONARR_API_KEY
      UN_SONARR_0_PATHS_0: /data/downloads/complete
      UN_RADARR_0_URL: http://radarr:7878
      UN_RADARR_0_API_KEY: $RADARR_API_KEY
      UN_RADARR_0_PATHS_0: /data/downloads/complete
    volumes:
      - /mnt/storage/media/downloads:/data/downloads
    networks:
      - arr_network

  gluetun:
    image: qmcgaw/gluetun:latest
    container_name: gluetun
    restart: always
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun:/dev/net/tun
    volumes:
      - gluetun:/gluetun
      - /mnt/storage/gluetun/info:/tmp/gluetun
      - /root/docker-compose/scripts/mam_seedbox_update_ip.sh:/scripts/ip.sh:ro
      - /root/docker-compose/scripts/update_port.sh:/scripts/port.sh:ro
    labels:
      ofelia.enabled: "true"
      ofelia.job-exec.update-ip.schedule: "@every 5m"
      ofelia.job-exec.update-ip.command: "sh /scripts/ip.sh"
      ofelia.job-exec.update-port.schedule: "@every 5m"
      ofelia.job-exec.update-port.command: "sh /scripts/port.sh"
    environment:
      TZ: $TZ
      VPN_SERVICE_PROVIDER: $VPN_SERVICE_PROVIDER
      VPN_TYPE: $VPN_TYPE
      OPENVPN_USER: $OPENVPN_USER
      OPENVPN_PASSWORD: $OPENVPN_PASSWORD
      VPN_PORT_FORWARDING: $VPN_PORT_FORWARDING
      VPN_PORT_FORWARDING_PROVIDER: $VPN_SERVICE_PROVIDER
      MAM_ID: $MAM_ID
      MAM_URL: $MAM_URL
    networks:
      - proxy
      - arr_network

  ofelia:
    image: mcuadros/ofelia:latest
    container_name: ofelia
    restart: unless-stopped
    depends_on:
      - gluetun
    command: daemon --docker
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    environment:
      PUID: 1000
      PGID: 1000
      TZ: $TZ
    restart: unless-stopped
    network_mode: service:gluetun
    depends_on:
      - gluetun
    volumes:
      - qbittorrent:/config
      - /mnt/storage/media/vuetorrent:/vuetorrent
      - /mnt/storage/media/downloads:/data/downloads

volumes:
  prowlarr:
  gluetun:
  qbittorrent:

networks:
  arr_network:
    external: true
  proxy:
    external: true
