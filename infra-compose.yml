x-logging: &default-logging
  driver: json-file
  options:
    max-size: 10m
    max-file: 3

services:
  omada:
    image: mbentley/omada-controller:5.15-chromium
    container_name: omada
    restart: always
    logging: *default-logging
    ports:
      - 27001:27001/udp
      - 29810:29810/udp
      - 29811-29816:29811-29816
      - 8088:8088
      - 8043:8043
      - 8843:8843
    environment:
      TZ: $TZ
    volumes:
      - ${VOLUME_PATH}/omada/data:/opt/tplink/EAPController/data
      - ${VOLUME_PATH}/omada/logs:/opt/tplink/EAPController/logs
    labels:
      docker-volume-backup.stop-during-backup: true
    networks:
      - proxy

  ddns-updater:
    image: ghcr.io/qdm12/ddns-updater:v2.9.0
    container_name: ddns-updater
    restart: always
    logging: *default-logging
    volumes:
      - ${VOLUME_PATH}/ddns-updater:/updater/data
    environment:
      TZ: $TZ
      # See: https://pkg.go.dev/time#ParseDuration
      PERIOD: 5m
      # Necessary for split dns
      RESOLVER_ADDRESS: $EXTERNAL_DNS
    networks:
      - proxy

  caddy:
    image: caddy:2.10.0
    container_name: caddy
    restart: always
    logging: *default-logging
    cap_add:
      - NET_ADMIN
    ports:
      - 80:80
      - 443:443/tcp
      - 443:443/udp
    environment:
      TZ: $TZ
    volumes:
      - ${VOLUME_PATH}/wger/static:/wger/static
      - ${VOLUME_PATH}/wger/media:/wger/media
      - ${VOLUME_PATH}/caddy/data:/data/caddy
      - ${VOLUME_PATH}/caddy/Caddyfile:/etc/caddy/Caddyfile
    networks:
      - proxy

  # pihole:
  #   image: pihole/pihole:2025.06.2
  #   container_name: pihole
  #   restart: always
  #   logging: *default-logging
  #   ports:
  #     - 53:53/tcp
  #     - 53:53/udp
  #     - 81:80
  #   environment:
  #     TZ: $TZ
  #     DNSMASQ_USER: pihole
  #   volumes:
  #     - ${VOLUME_PATH}/pihole/dnsmasq.d:/etc/dnsmasq.d
  #     - ${VOLUME_PATH}/pihole/config:/etc/pihole
  #   networks:
  #     - proxy

  wireguard:
    image: ghcr.io/wg-easy/wg-easy:15
    container_name: wireguard
    restart: unless-stopped
    logging: *default-logging
    ports:
      - "51820:51820/udp"
      - "51821:51821/tcp"
    cap_add:
      - NET_ADMIN
      - SYS_MODULE
    sysctls:
      - net.ipv4.ip_forward=1
      - net.ipv4.conf.all.src_valid_mark=1
    environment:
      TZ: $TZ
      PASSWORD_HASH: $WIREGUARD_PW_HASH
      WG_HOST: $WIREGUARD_HOST
      WG_ALLOWED_IPS: $WG_ALLOWED_IPS
    volumes:
      - ${VOLUME_PATH}/wireguard/config:/etc/wireguard
      - /lib/modules:/lib/modules
    networks:
      - infra

  daily-local-backup:
    image: offen/docker-volume-backup:v2
    container_name: daily-local-backup
    logging: *default-logging
    environment:
      BACKUP_CRON_EXPRESSION: "0 5 * * 1,3,5" # M/W/F at 5AM
      BACKUP_FILENAME: backup-%Y-%m-%dT%H-%M-%S.tar.gz
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: 5
    volumes:
      - ${VOLUME_PATH}:/backup/all-volumes:ro
      - ../.env:/backup/.env:ro
      - ../.authentik.env:/backup/.authentik.env:ro
      - ${HOME}/.ssh:/backup/.ssh:ro
      # Local backups
      - ${BACKUP_PATH}:/archive
      # Required
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # $TZ variable not supported
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - infra

  weekly-remote-backup:
    image: offen/docker-volume-backup:v2
    container_name: weekly-remote-backup
    logging: *default-logging
    environment:
      BACKUP_CRON_EXPRESSION: "0 5 * * 0" # Every Sunday at 5AM
      BACKUP_FILENAME: backup-%Y-%m-%dT%H-%M-%S.tar.gz
      BACKUP_PRUNING_PREFIX: backup-
      BACKUP_RETENTION_DAYS: 14 # Only saving once a week
      AWS_S3_BUCKET_NAME: paul.diloreto.backups
      AWS_ACCESS_KEY_ID: $S3_ACCESS_KEY
      AWS_SECRET_ACCESS_KEY: $S3_SECRET_KEY
    volumes:
      - ${VOLUME_PATH}:/backup/all-volumes:ro
      - ../.env:/backup/.env:ro
      - ../.authentik.env:/backup/.authentik.env:ro
      - ${HOME}/.ssh:/backup/.ssh:ro
      # Required
      - /var/run/docker.sock:/var/run/docker.sock:ro
      # $TZ variable not supported
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    networks:
      - infra

networks:
  infra:
    ipam:
      driver: default
      config:
        - subnet: "172.22.0.0/16"
  proxy:
    ipam:
      driver: default
      config:
        - subnet: "172.23.0.0/16"
